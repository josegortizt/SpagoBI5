<project name="${project.name}" default="makeDist" basedir=".">
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--   DEFINIZIONE FILE DI PROPERTY						                                      -->
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ --> 
  <property file="build.properties"/>	
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--   DEFINIZIONE CLASSPATH						                                            -->
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ --> 
	<path id="jar.classpath">
    		<pathelement path="${classpath}"/>
    		<fileset dir="${lib}">
          		<include name="**/*.jar"/>
    		</fileset>
		<!-- LIBRERIE ESTERNE necessarie per la compilazione -->
    		<fileset dir="${lib}/eclipselink">
          		<include name="**/*.jar"/>
    		</fileset>
    		<fileset dir="${lib}/hibernate">
          		<include name="**/*.jar"/>
    		</fileset>
    		<fileset dir="${lib}/hibernate/jpa">
          		<include name="**/*.jar"/>
    		</fileset>
    		<fileset dir="${lib}/hibernate/required">
          		<include name="**/*.jar"/>
    		</fileset>
    		<fileset dir="${lib}/jdbc">
          		<include name="**/*.jar"/>
    		</fileset>

    		<!-- LIBRERIE ESTERNE DEL WEB CONTAINER necessarie per la compilazione -->
    		<fileset dir="${runtime.lib}">
          		<include name="**/*.jar"/>
    		</fileset>
    		<!-- LIBRERIA SBI.UTILS DI SPAGOBI necessaria per la compilazione -->
    		<fileset dir="${sbiutils.dir}/dist">
          		<include name="**/*.jar"/>
    		</fileset>
			<!-- LIBRERIA SBI.UTILS.JSON DI SPAGOBI necessaria per la compilazione -->
			<fileset dir="${sbiutils.json.dir}/dist">
      			<include name="**/*.jar"/>
			</fileset>		
 	</path>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--   PULIZIA AMBIENTE						                                                -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++--> 
  <target name="clean" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}/${project.name}" />
  </target>	   	
  <target name="init" depends="clean">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--   SCARICO DEI SORGENTI AGGIORNATI DA CVS							                        -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


   
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--   AGGIORNAMENTO DELLA VERSIONE NEL MANIFEST                                                                -->
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ --> 
  <target name="upgrade.mf"  >
		<replaceregexp file="${src}/META-INF/MANIFEST.MF">
			<regexp pattern="(Implementation-Version:)(.*?$)"/>
			<substitution expression="(^)Implementation-Version: ${project.version}($)"/>
		</replaceregexp>
  </target> 

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--   COMPILAZIONE							                                                  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <target name="compile"  description="compile the source" >
	<antcall target="upgrade.mf" />
    <!-- Compile the java code from ${src} into ${build}/${webapp_name}/WEB-INF/classes -->
    <javac destdir="${build}" debug="on" encoding="${encoding}">
      <classpath refid="jar.classpath"/>
	<src path="${src}/test"/>
	<src path="${src}/hibernate"/>
	<src path="${src}/jpa"/>
	<src path="${src}/runtime"/>
	<src path="${src}/serialization"/>
  <src path="${src}/dataset"/>
  <src path="${src}/hive"/>
  <src path="${src}/sql"/>
    </javac> 
  </target>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--   COPIA EVENTUALI RISORSE     Aggiungere eventuali altri tipi di file        -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->	  	  
  <target name="copy.artifacts" depends="compile">
    <copy todir="${build}">
      <fileset dir="${src}/test">
        <exclude name="**/*.svn"/>
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="${src}/hibernate">
        <exclude name="**/*.svn"/>
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="${src}/jpa">
        <exclude name="**/*.svn"/>
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="${src}/runtime">
        <exclude name="**/*.svn"/>
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="${src}/serialization">
        <exclude name="**/*.svn"/>
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="${src}/dataset">
        <exclude name="**/*.svn"/>
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="${src}/hive">
        <exclude name="**/*.svn"/>
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="${src}/sql">
        <exclude name="**/*.svn"/>
        <exclude name="**/*.java"/>
      </fileset>
    </copy>

  </target>


	<target name="create.jar" depends="init,copy.artifacts" >
	      <mkdir dir="${dist}"/>
	      <delete file="${dist}/${jar.name}-${project.version}.jar" />
	      <jar destfile="${dist}/${jar.name}-${project.version}.jar" 
	           basedir="${build}" />
	</target>

  <target name="javadoc">    
    <javadoc packagenames="*"
      sourcepath="${src}"
      defaultexcludes="yes"
      destdir="${dist}/javadoc"
      author="true"
      version="true"
      use="true">
      <classpath refid="jar.classpath"/>
    </javadoc>    
  </target>

  <target name="makeDist" >    
    <antcall target="create.jar" />
  </target>

</project>
